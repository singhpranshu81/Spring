package com.mph.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mph.entity.HEmployee;
import com.mph.service.HEmployeeService;

@RestController
@RequestMapping("/employee")
public class EmployeeRESTController {
	@Autowired
	private HEmployeeService hEmployeeService;

	@GetMapping("/hi")
	public String hiAll() {
		return "hi";
	}
	@GetMapping(path ="/all")
	public ResponseEntity<List<HEmployee>> listAllEmployee() {
		List<HEmployee> list = hEmployeeService.getAllEmployee();
		if (list.isEmpty()) {
			return new ResponseEntity<List<HEmployee>>(HttpStatus.NO_CONTENT);
		}
		return new ResponseEntity<List<HEmployee>>(list, HttpStatus.OK);
	}
	
	@PostMapping("/createEmp")
	public HEmployee createEmp(@RequestBody HEmployee emp) {
		hEmployeeService.createEmployee(emp);
		return emp;
	}
	
	@PutMapping("/updateEmp")
	public HEmployee updateEmp(@RequestBody HEmployee emp) {
		hEmployeeService.updateEmployee(emp);
		return emp;
	}
	
	@GetMapping(path ="/getEmp/{id}")
	public ResponseEntity<HEmployee> getEmployee(@PathVariable int id) {
		HEmployee emp= hEmployeeService.getEmployee(id);
				if(emp==null) {
					return new ResponseEntity<HEmployee>(HttpStatus.NO_CONTENT);
				}
		return new ResponseEntity<HEmployee>(emp, HttpStatus.OK);
	}

	@GetMapping(path ="/deleteEmp/{id}")
	public ResponseEntity<List<HEmployee>> deleteEmployee(@PathVariable int id) {
		List<HEmployee> emp= hEmployeeService.deleteEmployee(id);
				if(emp.isEmpty()) {
					return new ResponseEntity<List<HEmployee>>(HttpStatus.NO_CONTENT);
				}
		return new ResponseEntity<List<HEmployee>>(emp, HttpStatus.OK);
	}
	
	
	
	
	
}
